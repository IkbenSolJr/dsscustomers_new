# -*- coding: utf-8 -*-
from odoo import models, fields, api, _
from odoo.exceptions import ValidationError

class DsscustomersAccountPay(models.Model):
    _name = 'dsscustomers.ketoan'
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _description = 'DSS Customers Accounting Pay'
    _rec_name = 'khachhangkt_ids'

    sottktoan = fields.Char(string='Stt', copy=False, readonly=True, default=lambda self: _('New'))
    khachhangkt_ids = fields.Many2one('dsscustomers.dsscustomers', string="Kh√°ch h√†ng", required=True)
    masokh = fields.Char(related='khachhangkt_ids.masokh', store=True)
    visa = fields.Selection(related='khachhangkt_ids.visa', store=True)
    phonekh = fields.Char(related='khachhangkt_ids.phonekh', store=True)
    emailkh = fields.Char(related='khachhangkt_ids.emailkh', store=True)

    # üîó Tr·∫°ng th√°i CS l·∫•y t·ª´ Kh√°ch h√†ng (mirror 1-chi·ªÅu, kh√¥ng copy d·ªØ li·ªáu)
    trangthaics = fields.Selection(
        related='khachhangkt_ids.trangthaics',
        store=True, index=True, readonly=True, string="Tr·∫°ng th√°i CS"
    )

    giaidoantt = fields.Selection([
        ('thanhtoangdmot', 'ƒê·ª£t 1'),
        ('thanhtoangdhai', 'ƒê·ª£t 2'),
        ('thanhtoangdba', 'ƒê·ª£t 3'),
        ('thanhtoangdbon', 'ƒê·ª£t 4'),
        ('thanhtoangdnam', 'ƒê·ª£t 5'),
        ('thanhtoangdsau', 'ƒê·ª£t 6'),
        ('thanhtoangdbay', 'ƒê·ª£t 7'),
        ('thanhtoangdtam', 'ƒê·ª£t 8'),
    ], string="Giai ƒëo·∫°n", default=False)
    lanthanhtoan = fields.Selection([
        ('ttlanmot', 'L·∫ßn 1'),
        ('ttlanhai', 'L·∫ßn 2'),
        ('ttlanba', 'L·∫ßn 3'),
        ('ttlanbon', 'L·∫ßn 4'),
    ], string="S·ªë l·∫ßn", default=False)

    ngaydukien = fields.Date(string="Ng√†y d·ª± ki·∫øn")
    currency_id = fields.Many2one('res.currency', string="ƒê∆°n v·ªã ti·ªÅn", store=True)
    sotiendukien = fields.Monetary(string="S·ªë ti·ªÅn d·ª± ki·∫øn", currency_field='currency_id')

    ngaytt = fields.Date(string="Ng√†y th·ª±c thu")
    sotientt = fields.Monetary(string="S·ªë ti·ªÅn th·ª±c thu", currency_field='currency_id')

    # Tham chi·∫øu ph√≠ Hƒê v√† currency t·ª´ KH (gi·ªØ nguy√™n nh∆∞ hi·ªán c√≥)
    phihopdong = fields.Monetary(related='khachhangkt_ids.phihopdong', currency_field='currency_ids')
    currency_ids = fields.Many2one('res.currency', related='khachhangkt_ids.currency_id', string="ƒê∆°n v·ªã ti·ªÅn (Hƒê)")
    ngaychothd = fields.Date(related='khachhangkt_ids.ngaychothd')

    ktcheck = fields.Boolean('K·∫ø to√°n ki·ªÉm tra', tracking=True)
    user_id = fields.Many2one(related='khachhangkt_ids.user_id', store=True)
    teamphutrach = fields.Many2one(related='khachhangkt_ids.teamphutrach', store=True)

    percentage = fields.Float("T·ª∑ l·ªá %", compute='_compute_percentage', store=True)

    @api.model
    def create(self, vals):
        if vals.get('sottktoan', _('New')) == _('New'):
            vals['sottktoan'] = self.env['ir.sequence'].next_by_code('dsscustomers.ketoan') or _('New')
        return super(DsscustomersAccountPay, self).create(vals)

    @api.depends('sotientt', 'sotiendukien')
    def _compute_percentage(self):
        for r in self:
            if not r.sotientt or not r.sotiendukien:
                r.percentage = 0.0
            else:
                r.percentage = (r.sotientt / r.sotiendukien) * 100.0
